#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.0.5 on Tue Aug 29 21:55:18 2023
#

import wx
import re
import os
import sys

sys.path.append('.')
from Pregen_InputFile import *

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):

    # Class variables
    FilePath       = ''
    InFileName     = ''
    VERSION_STRING = "Version 20230829"
    
    # Related to expert mode
    AllowExpert = 1             # expert mode allowed
    selectJP    = ''            # the selected Jyutping
    newEntry    = list()        # the reordered entry list

    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((450, 425))
        self.SetTitle(u"粵拼查找程式")
        self.SetBackgroundColour(wx.Colour(240, 255, 240))

        # Menu Bar
        self.frame_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        item = wxglade_tmp_menu.Append(wx.ID_ANY, u"版本", "")
        self.Bind(wx.EVT_MENU, self.ShowVersion, item)
        self.frame_menubar.Append(wxglade_tmp_menu, u"設定")
        self.SetMenuBar(self.frame_menubar)
        # Menu Bar end

        self.panel_1 = wx.Panel(self, wx.ID_ANY)

        sizer_1 = wx.BoxSizer(wx.VERTICAL)

        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_7, 0, wx.EXPAND, 0)

        label_1 = wx.StaticText(self.panel_1, wx.ID_ANY, u"歡迎使用 粵拼查找程式")
        label_1.SetMinSize((270, 70))
        label_1.SetFont(wx.Font(28, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        sizer_7.Add(label_1, 0, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND | wx.LEFT | wx.RIGHT | wx.SHAPED | wx.TOP, 20)

        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_2, 0, wx.BOTTOM | wx.EXPAND, 15)

        self.FileButton = wx.Button(self.panel_1, wx.ID_ANY, u"選擇檔案")
        self.FileButton.SetMinSize((150, 35))
        self.FileButton.SetFont(wx.Font(14, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        sizer_2.Add(self.FileButton, 2, wx.ALIGN_CENTER_VERTICAL | wx.LEFT, 24)

        self.FileNameLabel = wx.TextCtrl(self.panel_1, wx.ID_ANY, u"(未選檔案)", style=wx.TE_READONLY)
        self.FileNameLabel.SetFont(wx.Font(14, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        sizer_2.Add(self.FileNameLabel, 8, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 23)

        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_4, 0, wx.EXPAND, 0)

        label_2 = wx.StaticText(self.panel_1, wx.ID_ANY, "")
        sizer_4.Add(label_2, 0, wx.LEFT | wx.RIGHT, 25)

        self.StartButton = wx.Button(self.panel_1, wx.ID_ANY, u"處理檔案")
        self.StartButton.SetMinSize((300, 35))
        self.StartButton.SetBackgroundColour(wx.Colour(255, 255, 224))
        self.StartButton.SetForegroundColour(wx.Colour(204, 50, 50))
        self.StartButton.SetFont(wx.Font(14, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        sizer_4.Add(self.StartButton, 0, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.TOP, 15)

        static_line_1 = wx.StaticLine(self.panel_1, wx.ID_ANY)
        sizer_1.Add(static_line_1, 0, wx.ALL | wx.EXPAND, 20)

        StatusLabel = wx.StaticText(self.panel_1, wx.ID_ANY, u"狀態", style=wx.ALIGN_CENTER_HORIZONTAL)
        StatusLabel.SetMinSize((50, 25))
        StatusLabel.SetFont(wx.Font(14, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        sizer_1.Add(StatusLabel, 0, wx.BOTTOM | wx.LEFT, 20)

        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_6, 0, wx.EXPAND, 0)

        self.StatusText = wx.TextCtrl(self.panel_1, wx.ID_ANY, "", style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.StatusText.SetMinSize((200, 70))
        self.StatusText.SetBackgroundColour(wx.Colour(248, 248, 248))
        self.StatusText.SetForegroundColour(wx.Colour(0, 0, 255))
        self.StatusText.SetFont(wx.Font(12, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        sizer_6.Add(self.StatusText, 6, wx.ALIGN_CENTER_VERTICAL | wx.LEFT | wx.RIGHT, 25)

        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_1.Add(sizer_8, 1, 0, 0)

        static_line_3 = wx.StaticLine(self.panel_1, wx.ID_ANY)
        sizer_8.Add(static_line_3, 0, 0, 0)

        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_8.Add(sizer_9, 0, wx.EXPAND, 0)

        StatusLabel_copy = wx.StaticText(self.panel_1, wx.ID_ANY, u"進階", style=wx.ALIGN_CENTER_HORIZONTAL)
        StatusLabel_copy.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        StatusLabel_copy.Hide()
        sizer_9.Add(StatusLabel_copy, 0, wx.LEFT | wx.TOP, 28)

        self.ModeEntry = wx.CheckBox(self.panel_1, wx.ID_ANY, "")
        self.ModeEntry.Hide()
        sizer_9.Add(self.ModeEntry, 0, wx.BOTTOM | wx.LEFT, 30)

        self.SelectBox = wx.ComboBox(self.panel_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.SelectBox.Hide()
        sizer_8.Add(self.SelectBox, 1, wx.LEFT | wx.RIGHT | wx.TOP, 48)

        sizer_10 = wx.BoxSizer(wx.VERTICAL)
        sizer_8.Add(sizer_10, 0, wx.EXPAND, 0)

        self.FileButton_copy = wx.Button(self.panel_1, wx.ID_ANY, u"提交")
        self.FileButton_copy.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.FileButton_copy.Hide()
        sizer_10.Add(self.FileButton_copy, 1, wx.TOP, 45)

        sizer_8.Add((0, 0), 0, 0, 0)

        self.panel_1.SetSizer(sizer_1)

        self.Layout()

        self.Bind(wx.EVT_BUTTON, self.SelectFile, self.FileButton)
        self.Bind(wx.EVT_BUTTON, self.StartProcess, self.StartButton)
        self.Bind(wx.EVT_CHECKBOX, self.ModeSelect, self.ModeEntry)
        self.Bind(wx.EVT_BUTTON, self.SelectFile, self.FileButton_copy)
        # end wxGlade

    def ShowVersion(self, event):  # wxGlade: MyFrame.<event_handler>
        outStrV = self.VERSION_STRING
        wx.MessageBox(outStrV, 'Info', wx.OK)
    # end def ShowVersion()

    def SelectFile(self, event):  # wxGlade: MyFrame.<event_handler>
        dlg = wx.FileDialog(
            self, message="請選擇歌曲文字檔",
            # defaultDir=self.currentDirectory, 
            defaultFile="",
            wildcard="*.txt",
            style=wx.FD_OPEN | wx.FD_MULTIPLE | wx.FD_CHANGE_DIR
            )
        if dlg.ShowModal() == wx.ID_OK:
            paths           = dlg.GetPaths()
            self.FilePath   = re.sub('\\\\', '/', paths[0])
            print('self.FilePath = ' + self.FilePath)
            fileNameLastIdx = self.FilePath.rindex('/')
            self.InFileName = self.FilePath[(fileNameLastIdx+1):]
            self.FileNameLabel.SetValue(self.InFileName)
            # print('self.InFileName = ' + self.InFileName)
        # end if
        dlg.Destroy()
    # end def SelectFile()

    def StartProcess(self, event):  # wxGlade: MyFrame.<event_handler>
        if (self.FilePath == '') :
            outStr0 = '請選擇上傳檔案'
            wx.MessageBox(outStr0, 'Info', wx.OK)
            return
        # end if

        guiParam = [self.SelectJyutping, self.newEntry]
        # (code, errStr) = ProcessFile(self.FilePath, expertMode=expertVal, graphicsMode=1, guiParam=guiParam)
        (code, errStr) = ProcessFile(self.FilePath, expertMode=0, graphicsMode=1, guiParam=guiParam)
        
        if (code == 0) :
            # showinfo(title = 'Info', message='Success')
            outFile     = re.sub('.txt', '_input.txt', self.InFileName)
            noteFile    = re.sub('.txt', '_Notes.txt', self.InFileName)
            successText = '成功 !\n結果在 : ' + outFile + '\n附注在 : ' + noteFile
            self.StatusText.SetValue(successText)
            self.FileNameLabel.SetValue('')
            dlg = wx.MessageDialog(None, successText, "Info", wx.OK | wx.ICON_INFORMATION)
            dlg.ShowModal()
        else :
            # showinfo(title = 'Info', message=errStr)
            StatusText['text'] = errStr
            dlg = wx.MessageDialog(None, errStr, "Info", wx.OK | wx.ICON_INFORMATION)
            dlg.ShowModal()
        # end if
    # end def StartProcess()

    def ModeSelect(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'ModeSelect' not implemented!")
        event.Skip()
    # end def ModeSelect()

    def SelectJyutping(self, event):  # wxGlade: MyFrame.<event_handler>
        print("Event handler 'SelectJyutping' not implemented!")
        event.Skip()
    # end def SelectJyutping()

# end of class MyFrame

class Pregen_InputFile(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class Pregen_InputFile

if __name__ == "__main__":
    Pregen_InputFile = Pregen_InputFile(0)
    Pregen_InputFile.MainLoop()
